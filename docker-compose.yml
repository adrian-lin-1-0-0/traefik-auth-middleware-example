version: '3'
services:
  traefik:
      image: traefik:v2.5
      depends_on:
      - auth-service
      - api-service
      command:
        - --api.insecure=true
        - --providers.docker=true
        - --entrypoints.web.address=:80
        - --log.level=INFO
      ports:
        - 80:80
        - 8080:8080
      volumes:
        - /var/run/docker.sock:/var/run/docker.sock
      labels:
          - "traefik.http.middlewares.auth-middleware.forwardauth.address=http://auth-service/auth/valid"
          - "traefik.http.middlewares.auth-middleware.forwardauth.authResponseHeaders=X-Auth-User"
          - "traefik.http.middlewares.auth-middleware.forwardauth.authResponseHeadersRegex=^X-"
          - "traefik.http.middlewares.api-replacepathregex.replacepathregex.regex=^/api/v1/(.*)"
          - "traefik.http.middlewares.api-replacepathregex.replacepathregex.replacement=/$$1"
          - "traefik.http.routers.api.rule=Host(`localhost`)"
          - "traefik.http.routers.api.service=api@internal"

  auth-service:
    build: ./auth-server
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.auth-service.rule=PathPrefix(`/auth`)"
      - "traefik.http.routers.auth-service.entrypoints=web"
      - "traefik.http.services.auth-service.loadbalancer.server.port=80"
      - "traefik.http.services.auth-service.loadbalancer.healthCheck.path=/health"

  api-service:
    build: ./api-server
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api-service.rule=PathPrefix(`/api`)"
      - "traefik.http.routers.api-service.entrypoints=web"
      - "traefik.http.services.api-service.loadbalancer.server.port=80"
      - "traefik.http.routers.api-service.service=api-service"
      - "traefik.http.routers.api-service.middlewares=secured"
      - "traefik.http.services.api-service.loadbalancer.healthCheck.path=/health"
      - "traefik.http.middlewares.secured.chain.middlewares=auth-middleware,api-replacepathregex"
networks:
  traefik_network:
    external: true